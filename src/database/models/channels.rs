//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "channels")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Binary(16)")]
    pub id: Vec<u8>,
    pub r#type: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::channel_settings::Entity")]
    ChannelSettings,
    #[sea_orm(has_many = "super::chats::Entity")]
    Chats,
}

impl Related<super::channel_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChannelSettings.def()
    }
}

impl Related<super::chats::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Chats.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
