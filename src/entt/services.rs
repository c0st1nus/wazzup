//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "services")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub name: String,
    pub duration: i32,
    pub price: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub image_path: Option<String>,
    pub is_active: bool,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::bookings::Entity")]
    Bookings,
    #[sea_orm(has_many = "super::service_required_roles::Entity")]
    ServiceRequiredRoles,
}

impl Related<super::bookings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bookings.def()
    }
}

impl Related<super::service_required_roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ServiceRequiredRoles.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
