//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "service_required_roles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub service_id: i64,
    pub role_id: i64,
    pub quantity: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::resource_roles::Entity",
        from = "Column::RoleId",
        to = "super::resource_roles::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ResourceRoles,
    #[sea_orm(
        belongs_to = "super::services::Entity",
        from = "Column::ServiceId",
        to = "super::services::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Services,
}

impl Related<super::resource_roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ResourceRoles.def()
    }
}

impl Related<super::services::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Services.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
