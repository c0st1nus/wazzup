//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "client_tag_assignments")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub tag_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub client_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::client_tags::Entity",
        from = "Column::TagId",
        to = "super::client_tags::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ClientTags,
    #[sea_orm(
        belongs_to = "super::clients::Entity",
        from = "Column::ClientId",
        to = "super::clients::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Clients,
}

impl Related<super::client_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ClientTags.def()
    }
}

impl Related<super::clients::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Clients.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
