//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "wazzup_transfers")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub chat_id: String,
    pub from_user_id: i64,
    pub to_user_id: i64,
    pub message_id: Option<String>,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::FromUserId",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users2,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::ToUserId",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users1,
    #[sea_orm(
        belongs_to = "super::wazzup_chats::Entity",
        from = "Column::ChatId",
        to = "super::wazzup_chats::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    WazzupChats,
}

impl Related<super::wazzup_chats::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WazzupChats.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
