//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "wazzup_messages")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    #[sea_orm(column_type = "JsonBinary")]
    pub content: Json,
    pub chat_id: String,
    pub created_at: DateTimeWithTimeZone,
    pub is_inbound: Option<bool>,
    pub is_echo: Option<bool>,
    pub direction_status: Option<String>,
    pub author_name: Option<String>,
    pub author_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::wazzup_chats::Entity",
        from = "Column::ChatId",
        to = "super::wazzup_chats::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    WazzupChats,
}

impl Related<super::wazzup_chats::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WazzupChats.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
